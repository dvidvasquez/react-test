{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Dropbox\\\\Programaci\\xF3n web\\\\Exito\\\\test\\\\src\\\\components\\\\Artistas.js\";\nimport * as React from 'react';\nimport { getArtistas } from '../api/artists';\nimport { getAlbumsByArtist } from '../api/albums';\n\nclass Artistas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.albumsQuery = async id => {\n      const responseJson = await getAlbumsByArtist(id);\n      this.setState({\n        albums: responseJson,\n        isFetch: false\n      });\n    };\n\n    this.verArtistas = () => {\n      return;\n      this.state.artistas.pop(), this.state.artistas.map(artista => React.createElement(\"div\", {\n        key: artista.id,\n        className: \"artista\",\n        onClick: () => this.albumsQuery(artista.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, artista.name), React.createElement(\"img\", {\n        src: artista.image,\n        alt: artista.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      artistas: [],\n      albums: [],\n      isFetch: true\n    };\n  }\n\n  async componentDidMount() {\n    const responseJson = await getArtistas();\n    this.setState({\n      artistas: responseJson,\n      isFetch: false\n    });\n  }\n\n  render() {\n    const {\n      isFetch,\n      artistas\n    } = this.state;\n\n    if (this.state.isFetch) {\n      return \"Cargando...\";\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.verArtistas);\n  }\n\n}\n\nexport default Artistas;","map":{"version":3,"sources":["C:/Users/Usuario/Dropbox/ProgramaciÃ³n web/Exito/test/src/components/Artistas.js"],"names":["React","getArtistas","getAlbumsByArtist","Artistas","Component","constructor","props","albumsQuery","id","responseJson","setState","albums","isFetch","verArtistas","state","artistas","pop","map","artista","name","image","componentDidMount","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAelBC,WAfkB,GAeJ,MAAOC,EAAP,IAAc;AAC3B,YAAMC,YAAY,GAAG,MAAMP,iBAAiB,CAACM,EAAD,CAA5C;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEF,YAAT;AAAuBG,QAAAA,OAAO,EAAE;AAAhC,OAAd;AACA,KAlBiB;;AAAA,SAoBlBC,WApBkB,GAoBJ,MAAK;AAClB;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,IACA,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,GAApB,CAAyBC,OAAD,IACvB;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACV,EAAlB;AAAsB,QAAA,SAAS,EAAC,SAAhC;AAA0C,QAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBW,OAAO,CAACV,EAAzB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOU,OAAO,CAACC,IAAf,CADD,EAEC;AAAK,QAAA,GAAG,EAAED,OAAO,CAACE,KAAlB;AAAyB,QAAA,GAAG,EAAEF,OAAO,CAACC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD,CADA;AAOA,KA9BiB;;AAGjB,SAAKL,KAAL,GAAW;AACVC,MAAAA,QAAQ,EAAE,EADA;AAEVJ,MAAAA,MAAM,EAAE,EAFE;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAAX;AAKA;;AAED,QAAMS,iBAAN,GAA0B;AACzB,UAAMZ,YAAY,GAAG,MAAMR,WAAW,EAAtC;AACA,SAAKS,QAAL,CAAc;AAACK,MAAAA,QAAQ,EAAEN,YAAX;AAAyBG,MAAAA,OAAO,EAAE;AAAlC,KAAd;AACA;;AAmBDU,EAAAA,MAAM,GAAE;AACP,UAAM;AAAEV,MAAAA,OAAF;AAAWG,MAAAA;AAAX,QAAwB,KAAKD,KAAnC;;AACA,QAAG,KAAKA,KAAL,CAAWF,OAAd,EAAsB;AACrB,aAAO,aAAP;AACA;;AACD,WACC;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKC,WAFP,CADD;AAOA;;AA7CoC;;AAkDtC,eAAeV,QAAf","sourcesContent":["import * as React from 'react'\r\nimport { getArtistas } from '../api/artists'\r\nimport { getAlbumsByArtist } from '../api/albums'\r\n\r\nclass Artistas extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state={\r\n\t\t\tartistas: [],\r\n\t\t\talbums: [],\r\n\t\t\tisFetch: true\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount (){\r\n\t\tconst responseJson = await getArtistas()\r\n\t\tthis.setState({artistas: responseJson, isFetch: false})\r\n\t}\r\n\r\n\talbumsQuery = async (id) => {\r\n\t\tconst responseJson = await getAlbumsByArtist(id)\r\n\t\tthis.setState({albums: responseJson, isFetch: false})\r\n\t}\r\n\r\n\tverArtistas = () =>{\r\n\t\treturn \r\n\r\n\t\tthis.state.artistas.pop(),\r\n\t\tthis.state.artistas.map((artista) => \r\n\t\t\t<div key={artista.id} className=\"artista\" onClick={() => this.albumsQuery(artista.id)}>\r\n\t\t\t\t<span>{artista.name}</span>\r\n\t\t\t\t<img src={artista.image} alt={artista.name}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { isFetch, artistas } = this.state\r\n\t\tif(this.state.isFetch){\r\n\t\t\treturn \"Cargando...\"\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<section className=\"container-fluid\">\r\n\t\t\t\t{\t\r\n\t\t\t\t\tthis.verArtistas\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n \r\n\r\nexport default Artistas;\r\n"]},"metadata":{},"sourceType":"module"}