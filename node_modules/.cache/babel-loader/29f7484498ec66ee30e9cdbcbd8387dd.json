{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Dropbox\\\\Programaci\\xF3n web\\\\Exito\\\\test\\\\src\\\\components\\\\Artistas.js\";\nimport * as React from 'react';\nimport { getArtistas } from '../api/artists';\nimport { getAlbumsByArtist } from '../api/albums';\nimport { getSongsByAlbums } from '../api/songs';\n\nclass Artistas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.verArtistas = () => {\n      const {\n        artistas\n      } = this.state;\n      return this.state.artistas.pop(), this.state.artistas.map(artista => React.createElement(\"div\", {\n        key: artista.id,\n        className: \"artista\",\n        onClick: () => this.albumsQuery(artista),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, artista.name), React.createElement(\"img\", {\n        src: artista.image,\n        alt: artista.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })));\n    };\n\n    this.verAlbums = () => {\n      const {\n        albums\n      } = this.state;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"head-artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2 offset-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.artista.image,\n        alt: this.state.artista.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.state.artista.name), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), this.state.artista.popularity)))), React.createElement(\"div\", {\n        className: \"albums-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 offset-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\xC1lbumes\"), this.state.albums.map(albums => React.createElement(\"div\", {\n        className: \"row album\",\n        key: albums.id,\n        onClick: () => this.songsQuery(albums),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: albums.image,\n        alt: albums.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"nombre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, albums.name), React.createElement(\"p\", {\n        className: \"canciones\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Canciones: \", albums.total_tracks)), React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))))))));\n    };\n\n    this.duracion = ms => {\n      this.setState({\n        time: this.state.time + ms\n      });\n      const minutes = Math.floor(ms / 60000);\n      const seconds = (ms % 60000 / 1000).toFixed(0);\n      return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n    };\n\n    this.verCanciones = () => {\n      const {\n        songs\n      } = this.state; // console.log(this.state.album)\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"head-album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.album.image,\n        alt: this.state.album.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2 my-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.album.name), React.createElement(\"p\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\\xC1lbum \\u2022 \", this.state.album.name, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), this.state.album.total_tracks, \" canciones \\u2022\")))), React.createElement(\"div\", {\n        className: \"body-album\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Canciones\"), React.createElement(\"div\", {\n        className: \"canciones\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.songs.map((songs, i) => React.createElement(\"div\", {\n        className: \"row cancion\",\n        key: songs.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, i + 1)), React.createElement(\"div\", {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, songs.name)), React.createElement(\"div\", {\n        className: \"col-md-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.duracion(songs.duration_ms))))))));\n    };\n\n    this.albumsQuery = async art => {\n      const responseJson = await getAlbumsByArtist(art.id);\n      this.setState({\n        artista: art,\n        albums: responseJson[0].albums,\n        isFetch: false,\n        view: 'album'\n      });\n    };\n\n    this.songsQuery = async alb => {\n      const responseJson = await getSongsByAlbums(alb.id);\n      this.setState({\n        album: alb,\n        songs: responseJson[0].songs,\n        isFetch: false,\n        view: 'songs'\n      });\n    };\n\n    this.cargarVista = () => {\n      switch (this.state.view) {\n        case 'artista':\n          return this.verArtistas();\n          break;\n\n        case 'album':\n          return this.verAlbums();\n          break;\n\n        case 'songs':\n          return this.verCanciones();\n          break;\n      }\n    };\n\n    this.state = {\n      artistas: [],\n      artista: [],\n      albums: [],\n      album: [],\n      songs: [],\n      isFetch: true,\n      view: '',\n      time: 0\n    };\n  }\n\n  async componentDidMount() {\n    const responseJson = await getArtistas();\n    this.setState({\n      artistas: responseJson,\n      isFetch: false,\n      view: 'artista'\n    });\n  }\n\n  render() {\n    const {\n      isFetch\n    } = this.state;\n\n    if (this.state.isFetch) {\n      return \"Cargando...\";\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.cargarVista());\n  }\n\n}\n\nexport default Artistas;","map":{"version":3,"sources":["C:/Users/Usuario/Dropbox/Programación web/Exito/test/src/components/Artistas.js"],"names":["React","getArtistas","getAlbumsByArtist","getSongsByAlbums","Artistas","Component","constructor","props","verArtistas","artistas","state","pop","map","artista","id","albumsQuery","name","image","verAlbums","albums","popularity","songsQuery","total_tracks","duracion","ms","setState","time","minutes","Math","floor","seconds","toFixed","verCanciones","songs","album","i","duration_ms","art","responseJson","isFetch","view","alb","cargarVista","componentDidMount","render"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { getArtistas } from '../api/artists'\r\nimport { getAlbumsByArtist } from '../api/albums'\r\nimport { getSongsByAlbums } from '../api/songs'\r\n\r\nclass Artistas extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state={\r\n\t\t\tartistas: [],\r\n\t\t\tartista: [],\r\n\t\t\talbums: [],\r\n\t\t\talbum: [],\r\n\t\t\tsongs: [],\r\n\t\t\tisFetch: true,\r\n\t\t\tview: '',\r\n\t\t\ttime:0\r\n\t\t}\r\n\t}\r\n\r\n\tverArtistas = () =>{\r\n\t\tconst { artistas } = this.state\r\n\t\t\t \treturn this.state.artistas.pop(),\r\n\t\t\t\t  this.state.artistas.map((artista) => \r\n\t\t\t\t\t<div key={artista.id} className=\"artista\" onClick={() => this.albumsQuery(artista)}>\r\n\t\t\t\t\t\t<span>{artista.name}</span>\r\n\t\t\t\t\t\t<img src={artista.image} alt={artista.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t}\r\n\r\n\tverAlbums = () =>{\r\n\t\tconst { albums } = this.state\r\n\t\treturn <>\r\n\t\t\t<div className=\"head-artist\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-2 offset-md-5\">\r\n\t\t\t\t\t\t<img src={this.state.artista.image} alt={this.state.artista.name}/>\r\n\t\t\t\t\t\t<h4>{this.state.artista.name}</h4>\r\n\t\t\t\t\t\t<span><i className=\"fas fa-star\"></i>{this.state.artista.popularity}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"albums-container\">\r\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\r\n\t\t\t\t\t<p className=\"title\">Álbumes</p>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.albums.map((albums) =>\r\n\t\t\t\t\t\t\t<div className=\"row album\" key={albums.id} onClick={() => this.songsQuery(albums)}>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t<img src={albums.image} alt={albums.name}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"nombre\">{albums.name}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"canciones\">Canciones: {albums.total_tracks}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"play\"><i className=\"fas fa-play\"></i></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\t\t\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t}\r\n\r\n\tduracion = (ms) =>{\r\n\t\tthis.setState({time: this.state.time + ms})\r\n\t\tconst minutes = Math.floor(ms / 60000);\r\n\t  \tconst seconds = ((ms % 60000) / 1000).toFixed(0);\r\n\t  \treturn minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n\t}\r\n\r\n\tverCanciones = () =>{\r\n\t\tconst { songs } = this.state\r\n\t\t// console.log(this.state.album)\r\n\t\treturn <>\r\n\t\t\t<div className=\"head-album\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t\t<img src={this.state.album.image} alt={this.state.album.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-2 my-auto\">\r\n\t\t\t\t\t\t<h5>{this.state.album.name}</h5>\r\n\t\t\t\t\t\t<p className=\"info\">\r\n\t\t\t\t\t\t\tÁlbum • {this.state.album.name} <br/> \r\n\t\t\t\t\t\t\t{this.state.album.total_tracks} canciones •\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"body-album\">\r\n\t\t\t\t<h5>Canciones</h5>\r\n\t\t\t\t<div className=\"canciones\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.songs.map((songs,i) =>\r\n\t\t\t\t\t<div className=\"row cancion\" key={songs.id}>\r\n\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t<p>{i+1}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t\t\t<p>{songs.name}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t<p>{this.duracion(songs.duration_ms)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t}\r\n\r\n\tasync componentDidMount (){\r\n\t\tconst responseJson = await getArtistas()\r\n\t\tthis.setState({artistas: responseJson, isFetch: false, view: 'artista'})\r\n\t}\r\n\r\n\talbumsQuery = async (art) => {\r\n\t\tconst responseJson = await getAlbumsByArtist(art.id)\r\n\t\tthis.setState({artista: art, albums: responseJson[0].albums, isFetch: false, view: 'album'})\r\n\t}\r\n\r\n\tsongsQuery = async (alb) => {\r\n\t\tconst responseJson = await getSongsByAlbums(alb.id)\r\n\t\tthis.setState({album: alb, songs: responseJson[0].songs, isFetch: false, view: 'songs'})\r\n\t}\r\n\r\n\tcargarVista = () =>{\r\n\t\tswitch(this.state.view){\r\n\t\t\tcase 'artista': return this.verArtistas(); break;\r\n\t\t\tcase 'album': return this.verAlbums(); break;\r\n\t\t\tcase 'songs': return this.verCanciones(); break;\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { isFetch } = this.state\r\n\t\tif(this.state.isFetch){\r\n\t\t\treturn \"Cargando...\"\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<section className=\"container-fluid\">\r\n\t\t\t{\r\n\t\t\t\tthis.cargarVista()\r\n\t\t\t}\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n \r\n\r\nexport default Artistas;\r\n"]},"metadata":{},"sourceType":"module"}