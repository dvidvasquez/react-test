{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Dropbox\\\\Programaci\\xF3n web\\\\Exito\\\\test\\\\src\\\\components\\\\Artistas.js\";\nimport * as React from 'react';\nimport { getArtistas } from '../api/artists';\nimport { getAlbumsByArtist } from '../api/albums';\n\nclass Artistas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.verArtistas = () => {\n      const {\n        artistas\n      } = this.state;\n      return this.state.artistas.pop(), this.state.artistas.map(artista => React.createElement(\"div\", {\n        key: artista.id,\n        className: \"artista\",\n        onClick: () => this.albumsQuery(artista),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, artista.name), React.createElement(\"img\", {\n        src: artista.image,\n        alt: artista.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })));\n    };\n\n    this.verAlbums = () => {\n      const {\n        albums\n      } = this.state;\n      console.log(this.state.artista);\n      return React.createElement(\"div\", {\n        className: \"head-artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2 offset-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.artista.image,\n        alt: this.state.artista.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.artista.name), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.artista.popularity))));\n      /*return this.state.albums.map((albums) =>\r\n      \t\t)*/\n    };\n\n    this.albumsQuery = async art => {\n      const responseJson = await getAlbumsByArtist(art.id);\n      this.setState({\n        artista: art,\n        albums: responseJson,\n        isFetch: false,\n        view: 'album'\n      });\n    };\n\n    this.cargarVista = () => {\n      switch (this.state.view) {\n        case 'artista':\n          return this.verArtistas();\n          break;\n\n        case 'album':\n          return this.verAlbums();\n          break;\n      }\n    };\n\n    this.state = {\n      artistas: [],\n      artista: [],\n      albums: [],\n      isFetch: true,\n      view: ''\n    };\n  }\n\n  async componentDidMount() {\n    const responseJson = await getArtistas();\n    this.setState({\n      artistas: responseJson,\n      isFetch: false,\n      view: 'artista'\n    });\n  }\n\n  render() {\n    const {\n      isFetch\n    } = this.state;\n\n    if (this.state.isFetch) {\n      return \"Cargando...\";\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.cargarVista());\n  }\n\n}\n\nexport default Artistas;","map":{"version":3,"sources":["C:/Users/Usuario/Dropbox/ProgramaciÃ³n web/Exito/test/src/components/Artistas.js"],"names":["React","getArtistas","getAlbumsByArtist","Artistas","Component","constructor","props","verArtistas","artistas","state","pop","map","artista","id","albumsQuery","name","image","verAlbums","albums","console","log","popularity","art","responseJson","setState","isFetch","view","cargarVista","componentDidMount","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAYlBC,WAZkB,GAYJ,MAAK;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACG,aAAO,KAAKA,KAAL,CAAWD,QAAX,CAAoBE,GAApB,IACN,KAAKD,KAAL,CAAWD,QAAX,CAAoBG,GAApB,CAAyBC,OAAD,IACzB;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAsB,QAAA,SAAS,EAAC,SAAhC;AAA0C,QAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiBF,OAAjB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,OAAO,CAACG,IAAf,CADD,EAEC;AAAK,QAAA,GAAG,EAAEH,OAAO,CAACI,KAAlB;AAAyB,QAAA,GAAG,EAAEJ,OAAO,CAACG,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADC,CADD;AAOH,KArBiB;;AAAA,SAuBlBE,SAvBkB,GAuBN,MAAK;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKT,KAAxB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWG,OAAvB;AACA,aAAO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,OAAX,CAAmBI,KAA7B;AAAoC,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWG,OAAX,CAAmBG,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKN,KAAL,CAAWG,OAAX,CAAmBG,IAAxB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKN,KAAL,CAAWG,OAAX,CAAmBS,UAA1B,CAHD,CADD,CADM,CAAP;AASA;;AAGA,KAtCiB;;AAAA,SA6ClBP,WA7CkB,GA6CJ,MAAOQ,GAAP,IAAe;AAC5B,YAAMC,YAAY,GAAG,MAAMrB,iBAAiB,CAACoB,GAAG,CAACT,EAAL,CAA5C;AACA,WAAKW,QAAL,CAAc;AAACZ,QAAAA,OAAO,EAAEU,GAAV;AAAeJ,QAAAA,MAAM,EAAEK,YAAvB;AAAqCE,QAAAA,OAAO,EAAE,KAA9C;AAAqDC,QAAAA,IAAI,EAAE;AAA3D,OAAd;AACA,KAhDiB;;AAAA,SAkDlBC,WAlDkB,GAkDJ,MAAK;AAClB,cAAO,KAAKlB,KAAL,CAAWiB,IAAlB;AACC,aAAK,SAAL;AAAgB,iBAAO,KAAKnB,WAAL,EAAP;AAA2B;;AAC3C,aAAK,OAAL;AAAc,iBAAO,KAAKU,SAAL,EAAP;AAAyB;AAFxC;AAIA,KAvDiB;;AAGjB,SAAKR,KAAL,GAAW;AACVD,MAAAA,QAAQ,EAAE,EADA;AAEVI,MAAAA,OAAO,EAAE,EAFC;AAGVM,MAAAA,MAAM,EAAE,EAHE;AAIVO,MAAAA,OAAO,EAAE,IAJC;AAKVC,MAAAA,IAAI,EAAE;AALI,KAAX;AAOA;;AA8BD,QAAME,iBAAN,GAA0B;AACzB,UAAML,YAAY,GAAG,MAAMtB,WAAW,EAAtC;AACA,SAAKuB,QAAL,CAAc;AAAChB,MAAAA,QAAQ,EAAEe,YAAX;AAAyBE,MAAAA,OAAO,EAAE,KAAlC;AAAyCC,MAAAA,IAAI,EAAE;AAA/C,KAAd;AACA;;AAcDG,EAAAA,MAAM,GAAE;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKhB,KAAzB;;AACA,QAAG,KAAKA,KAAL,CAAWgB,OAAd,EAAsB;AACrB,aAAO,aAAP;AACA;;AACD,WACC;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKE,WAAL,EAFD,CADD;AAOA;;AAtEoC;;AA2EtC,eAAexB,QAAf","sourcesContent":["import * as React from 'react'\r\nimport { getArtistas } from '../api/artists'\r\nimport { getAlbumsByArtist } from '../api/albums'\r\n\r\nclass Artistas extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state={\r\n\t\t\tartistas: [],\r\n\t\t\tartista: [],\r\n\t\t\talbums: [],\r\n\t\t\tisFetch: true,\r\n\t\t\tview: ''\r\n\t\t}\r\n\t}\r\n\r\n\tverArtistas = () =>{\r\n\t\tconst { artistas } = this.state\r\n\t\t\t \treturn this.state.artistas.pop(),\r\n\t\t\t\t  this.state.artistas.map((artista) => \r\n\t\t\t\t\t<div key={artista.id} className=\"artista\" onClick={() => this.albumsQuery(artista)}>\r\n\t\t\t\t\t\t<span>{artista.name}</span>\r\n\t\t\t\t\t\t<img src={artista.image} alt={artista.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t}\r\n\r\n\tverAlbums = () =>{\r\n\t\tconst { albums } = this.state\r\n\t\tconsole.log(this.state.artista)\r\n\t\treturn <div className=\"head-artist\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2 offset-md-5\">\r\n\t\t\t\t\t<img src={this.state.artista.image} alt={this.state.artista.name}/>\r\n\t\t\t\t\t<h4>{this.state.artista.name}</h4>\r\n\t\t\t\t\t<span>{this.state.artista.popularity}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t/*return this.state.albums.map((albums) =>\r\n\r\n\t\t)*/\r\n\t}\r\n\r\n\tasync componentDidMount (){\r\n\t\tconst responseJson = await getArtistas()\r\n\t\tthis.setState({artistas: responseJson, isFetch: false, view: 'artista'})\r\n\t}\r\n\r\n\talbumsQuery = async (art) => {\r\n\t\tconst responseJson = await getAlbumsByArtist(art.id)\r\n\t\tthis.setState({artista: art, albums: responseJson, isFetch: false, view: 'album'})\r\n\t}\r\n\r\n\tcargarVista = () =>{\r\n\t\tswitch(this.state.view){\r\n\t\t\tcase 'artista': return this.verArtistas(); break;\r\n\t\t\tcase 'album': return this.verAlbums(); break;\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { isFetch } = this.state\r\n\t\tif(this.state.isFetch){\r\n\t\t\treturn \"Cargando...\"\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<section className=\"container-fluid\">\r\n\t\t\t{\r\n\t\t\t\tthis.cargarVista()\r\n\t\t\t}\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n \r\n\r\nexport default Artistas;\r\n"]},"metadata":{},"sourceType":"module"}