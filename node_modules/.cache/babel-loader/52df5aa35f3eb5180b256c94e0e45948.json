{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Dropbox\\\\Programaci\\xF3n web\\\\Exito\\\\test\\\\src\\\\components\\\\Artistas.js\";\nimport * as React from 'react'; // import  Artista from './Artista'\n\nimport { getArtistas } from '../api/artists';\n\nclass Artistas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.verAlbums = id => {\n      console.log(id);\n    };\n\n    this.state = {\n      artistas: [],\n      isFetch: true\n    };\n  }\n\n  async componentDidMount() {\n    const responseJson = await getArtistas();\n    this.setState({\n      artistas: responseJson,\n      isFetch: false\n    });\n  }\n\n  render() {\n    const {\n      isFetch,\n      artistas\n    } = this.state;\n\n    if (this.state.isFetch) {\n      return \"Cargando...\";\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, (this.state.artistas.pop(), this.state.artistas.map(artista => //<Artista {...artista} key={artista.id}  />\n    React.createElement(\"div\", {\n      key: artista.id,\n      className: \"artista\",\n      onClick: () => Artistas.verAlbums(artista.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, artista.name), React.createElement(\"img\", {\n      src: artista.image,\n      alt: artista.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Artistas;","map":{"version":3,"sources":["C:/Users/Usuario/Dropbox/ProgramaciÃ³n web/Exito/test/src/components/Artistas.js"],"names":["React","getArtistas","Artistas","Component","constructor","props","verAlbums","id","console","log","state","artistas","isFetch","componentDidMount","responseJson","setState","render","pop","map","artista","name","image"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAclBC,SAdkB,GAcLC,EAAD,IAAQ;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,KAhBiB;;AAGjB,SAAKG,KAAL,GAAW;AACVC,MAAAA,QAAQ,EAAE,EADA;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAX;AAIA;;AAED,QAAMC,iBAAN,GAA0B;AACzB,UAAMC,YAAY,GAAG,MAAMb,WAAW,EAAtC;AACA,SAAKc,QAAL,CAAc;AAACJ,MAAAA,QAAQ,EAAEG,YAAX;AAAyBF,MAAAA,OAAO,EAAE;AAAlC,KAAd;AACA;;AAMDI,EAAAA,MAAM,GAAE;AACP,UAAM;AAAEJ,MAAAA,OAAF;AAAWD,MAAAA;AAAX,QAAwB,KAAKD,KAAnC;;AACA,QAAG,KAAKA,KAAL,CAAWE,OAAd,EAAsB;AACrB,aAAO,aAAP;AACA;;AACD,WACC;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEE,KAAKF,KAAL,CAAWC,QAAX,CAAoBM,GAApB,IACA,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAyBC,OAAD,IACvB;AACA;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACZ,EAAlB;AAAsB,MAAA,SAAS,EAAC,SAAhC;AAA0C,MAAA,OAAO,EAAE,MAAML,QAAQ,CAACI,SAAT,CAAmBa,OAAO,CAACZ,EAA3B,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOY,OAAO,CAACC,IAAf,CADD,EAEC;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE,KAAlB;AAAyB,MAAA,GAAG,EAAEF,OAAO,CAACC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAFD,CAHF,EADD;AAcA;;AAtCoC;;AA2CtC,eAAelB,QAAf","sourcesContent":["import * as React from 'react'\r\n// import  Artista from './Artista'\r\nimport { getArtistas } from '../api/artists'\r\n\r\nclass Artistas extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state={\r\n\t\t\tartistas: [],\r\n\t\t\tisFetch: true\r\n\t\t}\r\n\t}\r\n\r\n\tasync componentDidMount (){\r\n\t\tconst responseJson = await getArtistas()\r\n\t\tthis.setState({artistas: responseJson, isFetch: false})\r\n\t}\r\n\r\n\tverAlbums = (id) => {\r\n\t\tconsole.log(id)\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { isFetch, artistas } = this.state\r\n\t\tif(this.state.isFetch){\r\n\t\t\treturn \"Cargando...\"\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<section className=\"container-fluid\">\r\n\t\t\t\t{\t\r\n\t\t\t\t\tthis.state.artistas.pop(),\r\n\t\t\t\t\tthis.state.artistas.map((artista) => \r\n\t\t\t\t\t\t//<Artista {...artista} key={artista.id}  />\r\n\t\t\t\t\t\t<div key={artista.id} className=\"artista\" onClick={() => Artistas.verAlbums(artista.id)}>\r\n\t\t\t\t\t\t\t<span>{artista.name}</span>\r\n\t\t\t\t\t\t\t<img src={artista.image} alt={artista.name}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n \r\n\r\nexport default Artistas;\r\n"]},"metadata":{},"sourceType":"module"}