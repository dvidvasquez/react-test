{"version":3,"sources":["api/artists.js","api/albums.js","api/songs.js","components/Artistas.js","serviceWorker.js","index.js"],"names":["getArtistas","a","fetch","response","json","responseJson","getAlbumsByArtist","id","getSongsByAlbums","Artistas","props","verArtistas","state","artistas","pop","map","artista","key","className","onClick","albumsQuery","name","src","image","alt","verAlbums","albums","popularity","songsQuery","total_tracks","minutos","ms","minutes","Math","floor","seconds","toFixed","totalMinutos","songs","parseInt","duration_ms","verCanciones","album","i","playSong","cancionesAleatoriasArtista","numAlbums","length","albumrRam","random","albumId","songByArtist","repCancion","this","art","setState","isFetch","view","alb","tempAlbum","sng","song","cargarVista","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2PAAO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACiBC,MAAM,0EADvB,cACAC,EADA,gBAEqBA,EAASC,OAF9B,cAEAC,EAFA,yBAGCA,GAHD,4C,sBCAA,SAAeC,EAAtB,kC,4CAAO,WAAiCC,GAAjC,iBAAAN,EAAA,sEACiBC,MAAM,gFAAgFK,GADvG,cACAJ,EADA,gBAEqBA,EAASC,OAF9B,cAEAC,EAFA,yBAGCA,GAHD,4C,sBCAA,SAAeG,EAAtB,kC,4CAAO,WAAgCD,GAAhC,iBAAAN,EAAA,sEACiBC,MAAM,8EAA8EK,GADrG,cACAJ,EADA,gBAEqBA,EAASC,OAF9B,cAEAC,EAFA,yBAGCA,GAHD,4C,sBAMQ,IC6MAI,E,YA7Md,WAAYC,GAAO,IAAD,8BACjB,4CAAMA,KAcPC,YAAc,WACQ,EAAKC,MAAlBC,SACL,OAAO,EAAKD,MAAMC,SAASC,MAC1B,EAAKF,MAAMC,SAASE,KAAI,SAACC,GAAD,OACzB,uBAAKC,IAAKD,EAAQT,GAAIW,UAAU,UAAUC,QAAS,kBAAM,EAAKC,YAAYJ,KACzE,4BAAOA,EAAQK,MACf,uBAAKC,IAAKN,EAAQO,MAAOC,IAAKR,EAAQK,YArBzB,EA0BlBI,UAAY,WACQ,EAAKb,MAAhBc,OACR,OAAO,gCACN,uBAAKR,UAAU,eACd,uBAAKA,UAAU,OACd,uBAAKA,UAAU,wBACd,uBAAKI,IAAK,EAAKV,MAAMI,QAAQO,MAAOC,IAAK,EAAKZ,MAAMI,QAAQK,OAC5D,0BAAK,EAAKT,MAAMI,QAAQK,MACxB,4BAAM,qBAAGH,UAAU,gBAAmB,EAAKN,MAAMI,QAAQW,eAI5D,uBAAKT,UAAU,oBACd,uBAAKA,UAAU,wBACd,qBAAGA,UAAU,SAAb,cAEC,EAAKN,MAAMc,OAAOX,KAAI,SAACW,GAAD,OACrB,uBAAKR,UAAU,YAAYD,IAAKS,EAAOnB,GAAIY,QAAS,kBAAM,EAAKS,WAAWF,KACzE,uBAAKR,UAAU,YACd,uBAAKI,IAAKI,EAAOH,MAAOC,IAAKE,EAAOL,QAErC,uBAAKH,UAAU,aACd,qBAAGA,UAAU,UAAUQ,EAAOL,MAC9B,qBAAGH,UAAU,aAAb,cAAqCQ,EAAOG,eAE7C,uBAAKX,UAAU,YACd,qBAAGA,UAAU,QAAO,qBAAGA,UAAU,0BApDvB,EA8DlBY,QAAU,SAACC,GACV,IAAMC,EAAUC,KAAKC,MAAMH,EAAK,KACxBI,GAAYJ,EAAK,IAAS,KAAMK,QAAQ,GAC9C,OAAOJ,EAAU,KAAOG,EAAU,GAAK,IAAM,IAAMA,GAjEpC,EAoElBE,aAAe,WACd,IAAIN,EAAK,EACS,EAAKnB,MAAf0B,MAKR,OAJA,EAAK1B,MAAM0B,MAAMA,MAAMvB,KAAI,SAACuB,GAC3BP,GAAMQ,SAASD,EAAME,gBAER,EAAKV,QAAQC,IA1EV,EA8ElBU,aAAe,WACI,EAAK7B,MAAf0B,MACR,OAAO,gCACN,uBAAKpB,UAAU,cACd,uBAAKA,UAAU,OACd,uBAAKA,UAAU,YACd,uBAAKI,IAAK,EAAKV,MAAM8B,MAAMnB,MAAOC,IAAK,EAAKZ,MAAM8B,MAAMrB,QAEzD,uBAAKH,UAAU,oBACd,0BAAK,EAAKN,MAAM8B,MAAMrB,MACtB,qBAAGH,UAAU,QAAb,mBACU,EAAKN,MAAM8B,MAAMrB,KAD3B,IACiC,2BAC/B,EAAKT,MAAM8B,MAAMb,aAFnB,qBAE8C,EAAKQ,mBAKtD,uBAAKnB,UAAU,cACd,uCACA,uBAAKA,UAAU,aAEd,EAAKN,MAAM0B,MAAMA,MAAMvB,KAAI,SAACuB,EAAMK,GAAP,OAC3B,uBAAKzB,UAAU,cAAcD,IAAKqB,EAAM/B,GAAIY,QAAS,kBAAM,EAAKyB,SAASN,KACxE,uBAAKpB,UAAU,YACd,yBAAIyB,EAAE,IAEP,uBAAKzB,UAAU,aACd,yBAAIoB,EAAMjB,OAEX,uBAAKH,UAAU,YACd,yBAAI,EAAKY,QAAQQ,EAAME,uBA5GX,EAsHlBK,2BAA6B,WAC5B,IAAMC,EAAY,EAAKlC,MAAMc,OAAOqB,OAC9BC,EAAYf,KAAKC,MAAOD,KAAKgB,SAAWH,EAAa,GACrDI,EAAU,EAAKtC,MAAMc,OAAOsB,GAAWzC,GAC7C,EAAK4C,aAAaD,IA1HD,EAiIlBE,WAAa,WACZ,OAAO,gCACN,uBAAKlC,UAAU,eACd,uBAAKA,UAAU,OACd,uBAAKA,UAAU,wBACd,uBAAKI,IAAK,EAAKV,MAAMI,QAAQO,MAAOC,IAAK,EAAKZ,MAAMI,QAAQK,OAC5D,0BAAK,EAAKT,MAAMI,QAAQK,MACxB,4BAAM,qBAAGH,UAAU,gBAAmB,EAAKN,MAAMI,QAAQW,eAI5D,uBAAKT,UAAU,OACd,uBAAKA,UAAU,mCACd,qBAAGC,QAAS,kBAAM,EAAKC,YAAY,EAAKR,MAAMI,WAA9C,iBAIA,WAAWqC,KAAKR,iCAlJF,EA4JlBzB,YA5JkB,uCA4JJ,WAAOkC,GAAP,eAAArD,EAAA,sEACcK,EAAkBgD,EAAI/C,IADpC,OACPF,EADO,OAEb,EAAKkD,SAAS,CAACvC,QAASsC,EAAK5B,OAAQrB,EAAa,GAAGqB,OAAQ8B,SAAS,EAAOC,KAAM,UAFtE,2CA5JI,wDAiKlB7B,WAjKkB,uCAiKL,WAAO8B,GAAP,eAAAzD,EAAA,sEACeO,EAAiBkD,EAAInD,IADpC,OACNF,EADM,OAEZ,EAAKkD,SAAS,CAACb,MAAOgB,EAAKpB,MAAOjC,EAAa,GAAImD,SAAS,EAAOC,KAAM,UAF7D,2CAjKK,wDAsKlBN,aAtKkB,uCAsKH,WAAO5C,GAAP,eAAAN,EAAA,sEACaO,EAAiBD,GAD9B,OACRF,EADQ,OAEd,EAAKkD,SAAS,CAACI,UAAWtD,EAAa,KAFzB,2CAtKG,wDA2KlBuC,SAAW,SAACgB,GACX,EAAKL,SAAS,CAACM,KAAMD,EAAKH,KAAM,UA5Kf,EA+KlBK,YAAc,WACb,OAAO,EAAKlD,MAAM6C,MACjB,IAAK,UAAW,OAAO,EAAK9C,cAC5B,IAAK,QAAS,OAAO,EAAKc,YAC1B,IAAK,QAAS,OAAO,EAAKgB,eAC1B,IAAK,OAAQ,OAAO,EAAKW,eAlL1B,EAAKxC,MAAM,CACVC,SAAU,GACVG,QAAS,GACTU,OAAQ,GACRgB,MAAO,GACPJ,MAAO,GACPuB,KAAM,GACNF,UAAU,GACVH,SAAS,EACTC,KAAM,IAXU,E,iNAwJUzD,I,OAArBK,E,OACNgD,KAAKE,SAAS,CAAC1C,SAAUR,EAAcmD,SAAS,EAAOC,KAAM,Y,qIAgCzCJ,KAAKzC,MAAjB4C,QACR,OAAGH,KAAKzC,MAAM4C,QACN,cAGP,gCACA,2BAAStC,UAAU,mBAGlBmC,KAAKS,oB,GAnMcC,a,MCOHC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,SD6H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.be82cedc.chunk.js","sourcesContent":["export async function getArtistas(){\r\n\tconst response = await fetch('https://i8rmpiaad2.execute-api.us-east-1.amazonaws.com/dev/api/artists')\r\n\tconst responseJson = await response.json()\r\n\treturn responseJson\r\n}\r\n\r\nexport default {\r\n\tgetArtistas\r\n}","export async function getAlbumsByArtist(id){\r\n\tconst response = await fetch('https://i8rmpiaad2.execute-api.us-east-1.amazonaws.com/dev/api/albums?artist='+id)\r\n\tconst responseJson = await response.json()\r\n\treturn responseJson\r\n}\r\n\r\nexport default {\r\n\tgetAlbumsByArtist\r\n}","export async function getSongsByAlbums(id){\r\n\tconst response = await fetch('https://i8rmpiaad2.execute-api.us-east-1.amazonaws.com/dev/api/songs?album='+id)\r\n\tconst responseJson = await response.json()\r\n\treturn responseJson\r\n}\r\n\r\nexport default {\r\n\tgetSongsByAlbums\r\n}","import * as React from 'react'\r\nimport { getArtistas } from '../api/artists'\r\nimport { getAlbumsByArtist } from '../api/albums'\r\nimport { getSongsByAlbums } from '../api/songs'\r\n\r\nclass Artistas extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tartistas: [],\r\n\t\t\tartista: [],\r\n\t\t\talbums: [],\r\n\t\t\talbum: [],\r\n\t\t\tsongs: [],\r\n\t\t\tsong: [],\r\n\t\t\ttempAlbum:[],\r\n\t\t\tisFetch: true,\r\n\t\t\tview: ''\r\n\t\t}\r\n\t}\r\n\r\n\tverArtistas = () =>{\r\n\t\tconst { artistas } = this.state\r\n\t\t\t \treturn this.state.artistas.pop(),\r\n\t\t\t\t  this.state.artistas.map((artista) => \r\n\t\t\t\t\t<div key={artista.id} className=\"artista\" onClick={() => this.albumsQuery(artista)}>\r\n\t\t\t\t\t\t<span>{artista.name}</span>\r\n\t\t\t\t\t\t<img src={artista.image} alt={artista.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t}\r\n\r\n\tverAlbums = () =>{\r\n\t\tconst { albums } = this.state\r\n\t\treturn <>\r\n\t\t\t<div className=\"head-artist\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-2 offset-md-5\">\r\n\t\t\t\t\t\t<img src={this.state.artista.image} alt={this.state.artista.name}/>\r\n\t\t\t\t\t\t<h4>{this.state.artista.name}</h4>\r\n\t\t\t\t\t\t<span><i className=\"fas fa-star\"></i>{this.state.artista.popularity}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"albums-container\">\r\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\r\n\t\t\t\t\t<p className=\"title\">Álbumes</p>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.albums.map((albums) =>\r\n\t\t\t\t\t\t\t<div className=\"row album\" key={albums.id} onClick={() => this.songsQuery(albums)}>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t<img src={albums.image} alt={albums.name}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"nombre\">{albums.name}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"canciones\">Canciones: {albums.total_tracks}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"play\"><i className=\"fas fa-play\"></i></p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\t\t\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t}\r\n\r\n\tminutos = (ms) =>{\r\n\t\tconst minutes = Math.floor(ms / 60000);\r\n\t  \tconst seconds = ((ms % 60000) / 1000).toFixed(0);\r\n\t  \treturn minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n\t}\r\n\r\n\ttotalMinutos = () =>{\r\n\t\tvar ms = 0;\r\n\t\tconst { songs } = this.state\r\n\t\tthis.state.songs.songs.map((songs) => {\r\n\t\t\tms += parseInt(songs.duration_ms)\r\n\t\t})\r\n\t\tconst total = this.minutos(ms)\r\n\t\treturn total\r\n\t}\r\n\r\n\tverCanciones = () =>{\r\n\t\tconst { songs } = this.state\r\n\t\treturn <>\r\n\t\t\t<div className=\"head-album\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-2\">\r\n\t\t\t\t\t\t<img src={this.state.album.image} alt={this.state.album.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-2 my-auto\">\r\n\t\t\t\t\t\t<h5>{this.state.album.name}</h5>\r\n\t\t\t\t\t\t<p className=\"info\">\r\n\t\t\t\t\t\t\tÁlbum • {this.state.album.name} <br/> \r\n\t\t\t\t\t\t\t{this.state.album.total_tracks} Canciones • {this.totalMinutos()}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"body-album\">\r\n\t\t\t\t<h5>Canciones</h5>\r\n\t\t\t\t<div className=\"canciones\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.songs.songs.map((songs,i) =>\r\n\t\t\t\t\t<div className=\"row cancion\" key={songs.id} onClick={() => this.playSong(songs)}>\r\n\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t<p>{i+1}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-10\">\r\n\t\t\t\t\t\t\t<p>{songs.name}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-md-1\">\r\n\t\t\t\t\t\t\t<p>{this.minutos(songs.duration_ms)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t}\r\n\r\n\tcancionesAleatoriasArtista = () =>{\r\n\t\tconst numAlbums = this.state.albums.length \r\n\t\tconst albumrRam = Math.floor((Math.random() * numAlbums) + 0)\r\n\t\tconst albumId = this.state.albums[albumrRam].id;\r\n\t\tthis.songByArtist(albumId)\r\n\t\t// const canciones = this.state.songs.find( e => e.album === albumId)\r\n\t\t// for (var i = 0; i <= num; i++) {\r\n\t\t// }\r\n\r\n\t}\r\n\r\n\trepCancion = () =>{\r\n\t\treturn <>\r\n\t\t\t<div className=\"head-artist\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-2 offset-md-5\">\r\n\t\t\t\t\t\t<img src={this.state.artista.image} alt={this.state.artista.name}/>\r\n\t\t\t\t\t\t<h4>{this.state.artista.name}</h4>\r\n\t\t\t\t\t\t<span><i className=\"fas fa-star\"></i>{this.state.artista.popularity}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bar\">\r\n\t\t\t\t<div className=\"col-md-8 offset-md-2 link-album\">\r\n\t\t\t\t\t<p onClick={() => this.albumsQuery(this.state.artista)}>Álbumes</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\t(function(){this.cancionesAleatoriasArtista()})\r\n\t\t\t}\r\n\t\t</>\r\n\t}\r\n\r\n\tasync componentDidMount (){\r\n\t\tconst responseJson = await getArtistas()\r\n\t\tthis.setState({artistas: responseJson, isFetch: false, view: 'artista'})\r\n\t}\r\n\r\n\talbumsQuery = async (art) => {\r\n\t\tconst responseJson = await getAlbumsByArtist(art.id)\r\n\t\tthis.setState({artista: art, albums: responseJson[0].albums, isFetch: false, view: 'album'})\r\n\t}\r\n\r\n\tsongsQuery = async (alb) => {\r\n\t\tconst responseJson = await getSongsByAlbums(alb.id)\r\n\t\tthis.setState({album: alb, songs: responseJson[0], isFetch: false, view: 'songs'})\r\n\t}\r\n\r\n\tsongByArtist = async (id) => {\r\n\t\tconst responseJson = await getSongsByAlbums(id)\r\n\t\tthis.setState({tempAlbum: responseJson[0]})\r\n\t}\r\n\r\n\tplaySong = (sng) =>{\r\n\t\tthis.setState({song: sng, view: 'song'})\r\n\t}\r\n\r\n\tcargarVista = () =>{\r\n\t\tswitch(this.state.view){\r\n\t\t\tcase 'artista': return this.verArtistas(); break;\r\n\t\t\tcase 'album': return this.verAlbums(); break;\r\n\t\t\tcase 'songs': return this.verCanciones(); break;\r\n\t\t\tcase 'song': return this.repCancion(); break;\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { isFetch } = this.state\r\n\t\tif(this.state.isFetch){\r\n\t\t\treturn \"Cargando...\"\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<section className=\"container-fluid\">\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tthis.cargarVista()\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t</section>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n \r\n\r\nexport default Artistas;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Artistas from './components/Artistas';\nimport './css/main.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Artistas/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}